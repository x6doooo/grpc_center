// Code generated by protoc-gen-go.
// source: service_center.proto
// DO NOT EDIT!

/*
Package service_center is a generated protocol buffer package.

It is generated from these files:
	service_center.proto

It has these top-level messages:
	JoinRequest
	JoinResponse
	SayRequest
	SayResponse
*/
package service_center

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_OK    Status = 0
	Status_ERROR Status = 1
)

var Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type JoinRequest struct {
	Addr   string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Weight int32  `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
}

func (m *JoinRequest) Reset()                    { *m = JoinRequest{} }
func (m *JoinRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()               {}
func (*JoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type JoinResponse struct {
	Code Status `protobuf:"varint,1,opt,name=code,enum=Status" json:"code,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
}

func (m *JoinResponse) Reset()                    { *m = JoinResponse{} }
func (m *JoinResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()               {}
func (*JoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SayRequest struct {
	Sth string `protobuf:"bytes,1,opt,name=sth" json:"sth,omitempty"`
}

func (m *SayRequest) Reset()                    { *m = SayRequest{} }
func (m *SayRequest) String() string            { return proto.CompactTextString(m) }
func (*SayRequest) ProtoMessage()               {}
func (*SayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SayResponse struct {
	Yes string `protobuf:"bytes,1,opt,name=yes" json:"yes,omitempty"`
}

func (m *SayResponse) Reset()                    { *m = SayResponse{} }
func (m *SayResponse) String() string            { return proto.CompactTextString(m) }
func (*SayResponse) ProtoMessage()               {}
func (*SayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*JoinRequest)(nil), "JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "JoinResponse")
	proto.RegisterType((*SayRequest)(nil), "SayRequest")
	proto.RegisterType((*SayResponse)(nil), "SayResponse")
	proto.RegisterEnum("Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ServiceCenter service

type ServiceCenterClient interface {
	// for service
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
}

type serviceCenterClient struct {
	cc *grpc.ClientConn
}

func NewServiceCenterClient(cc *grpc.ClientConn) ServiceCenterClient {
	return &serviceCenterClient{cc}
}

func (c *serviceCenterClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := grpc.Invoke(ctx, "/ServiceCenter/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ServiceCenter service

type ServiceCenterServer interface {
	// for service
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
}

func RegisterServiceCenterServer(s *grpc.Server, srv ServiceCenterServer) {
	s.RegisterService(&_ServiceCenter_serviceDesc, srv)
}

func _ServiceCenter_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceCenterServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceCenter/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceCenterServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceCenter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ServiceCenter",
	HandlerType: (*ServiceCenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _ServiceCenter_Join_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

// Client API for Test service

type TestClient interface {
	Say(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayResponse, error)
}

type testClient struct {
	cc *grpc.ClientConn
}

func NewTestClient(cc *grpc.ClientConn) TestClient {
	return &testClient{cc}
}

func (c *testClient) Say(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayResponse, error) {
	out := new(SayResponse)
	err := grpc.Invoke(ctx, "/Test/Say", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Test service

type TestServer interface {
	Say(context.Context, *SayRequest) (*SayResponse, error)
}

func RegisterTestServer(s *grpc.Server, srv TestServer) {
	s.RegisterService(&_Test_serviceDesc, srv)
}

func _Test_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Test/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServer).Say(ctx, req.(*SayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Test_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Test",
	HandlerType: (*TestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _Test_Say_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("service_center.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x50, 0xcd, 0x4b, 0xf3, 0x30,
	0x18, 0x6f, 0xd7, 0xae, 0x2f, 0x7d, 0xda, 0xbd, 0x94, 0x20, 0x32, 0x3a, 0xd0, 0x11, 0x10, 0xc6,
	0xc0, 0x1c, 0x2a, 0x08, 0x9e, 0x84, 0x89, 0x17, 0x3d, 0x4c, 0x52, 0xef, 0x52, 0xd3, 0x87, 0xad,
	0x97, 0xa6, 0x26, 0x99, 0xd2, 0xff, 0x5e, 0x9a, 0xb6, 0xd8, 0xdd, 0x7e, 0xf9, 0xf8, 0x7d, 0xc2,
	0x85, 0x46, 0xf5, 0x5d, 0x09, 0xfc, 0x10, 0x58, 0x1b, 0x54, 0xac, 0x51, 0xd2, 0x48, 0xfa, 0x00,
	0xd1, 0x8b, 0xac, 0x6a, 0x8e, 0x5f, 0x27, 0xd4, 0x86, 0x10, 0xf0, 0x8b, 0xb2, 0x54, 0x4b, 0x77,
	0xed, 0x6e, 0x42, 0x6e, 0x31, 0xb9, 0x84, 0xe0, 0x07, 0xab, 0xc3, 0xd1, 0x2c, 0x67, 0x6b, 0x77,
	0x33, 0xe7, 0xc3, 0x89, 0x3e, 0x42, 0xdc, 0x53, 0x75, 0x23, 0x6b, 0x8d, 0x64, 0x05, 0xbe, 0x90,
	0x25, 0x5a, 0xee, 0xff, 0xec, 0x1f, 0xcb, 0x4d, 0x61, 0x4e, 0x9a, 0xdb, 0xcb, 0x4e, 0xb8, 0x44,
	0x2d, 0xac, 0x44, 0xc8, 0x2d, 0xa6, 0x57, 0x00, 0x79, 0xd1, 0x8e, 0xd6, 0x09, 0x78, 0xda, 0x1c,
	0x07, 0xe7, 0x0e, 0xd2, 0x6b, 0x88, 0xec, 0xfb, 0xa0, 0x9f, 0x80, 0xd7, 0xa2, 0x1e, 0x3f, 0xb4,
	0xa8, 0xb7, 0x2b, 0x08, 0x7a, 0x13, 0x12, 0xc0, 0x6c, 0xff, 0x9a, 0x38, 0x24, 0x84, 0xf9, 0x33,
	0xe7, 0x7b, 0x9e, 0xb8, 0xd9, 0x3d, 0x2c, 0xf2, 0xbe, 0xf1, 0x93, 0x2d, 0x4c, 0x6e, 0xc0, 0xef,
	0xf2, 0x92, 0x98, 0x4d, 0x1a, 0xa7, 0x0b, 0x36, 0x2d, 0x41, 0x9d, 0x6c, 0x0b, 0xfe, 0x7b, 0x97,
	0x87, 0x82, 0x97, 0x17, 0x2d, 0x89, 0xd8, 0x5f, 0xc6, 0x34, 0x66, 0x93, 0x40, 0xd4, 0xd9, 0xdd,
	0x42, 0x7a, 0x50, 0x8d, 0x18, 0x27, 0x3d, 0x5f, 0x78, 0x77, 0xee, 0xff, 0xe6, 0x7e, 0x06, 0x76,
	0xf3, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x08, 0x5a, 0xcd, 0x8b, 0x01, 0x00, 0x00,
}
